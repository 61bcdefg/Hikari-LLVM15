; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt < %s -instsimplify -S -verify | FileCheck %s

@g = global i32 0
@g.ptrauth = private constant { ptr, i32, i64, i64 } { ptr @g, i32 0, i64 0, i64 0 }, section "llvm.ptrauth"

@g.ptrauth2 = private constant { ptr, i32, i64, i64 } { ptr @g, i32 0, i64 0, i64 0 }, section "llvm.ptrauth"

@g2 = global i32 0
@g2.ptrauth = private constant { ptr, i32, i64, i64 } { ptr @g2, i32 0, i64 0, i64 0 }, section "llvm.ptrauth"

@g_weak = extern_weak global i32
@g_weak.ptrauth = private constant { ptr, i32, i64, i64 } { ptr @g_weak, i32 0, i64 0, i64 0 }, section "llvm.ptrauth"

define i1 @icmp_ptrauth_globals() {
; CHECK-LABEL: @icmp_ptrauth_globals(
; CHECK-NEXT:    ret i1 icmp eq (ptr @g.ptrauth, ptr @g2.ptrauth)
;
  %cmp = icmp eq ptr @g.ptrauth, @g2.ptrauth
  ret i1 %cmp
}

define i1 @icmp_ptrauth_same_global() {
; CHECK-LABEL: @icmp_ptrauth_same_global(
; CHECK-NEXT:    ret i1 icmp eq (ptr @g.ptrauth, ptr @g.ptrauth2)
;
  %cmp = icmp eq ptr @g.ptrauth, @g.ptrauth2
  ret i1 %cmp
}

define i1 @icmp_ptrauth_null() {
; CHECK-LABEL: @icmp_ptrauth_null(
; CHECK-NEXT:    ret i1 icmp eq (ptr @g.ptrauth, ptr null)
;
  %cmp = icmp eq ptr @g.ptrauth, null
  ret i1 %cmp
}

define i1 @icmp_ptrauth_weak_null() {
; CHECK-LABEL: @icmp_ptrauth_weak_null(
; CHECK-NEXT:    ret i1 icmp eq (ptr @g_weak.ptrauth, ptr null)
;
  %cmp = icmp eq ptr @g_weak.ptrauth, null
  ret i1 %cmp
}

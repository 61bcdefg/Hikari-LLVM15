# RUN: llc -mtriple=arm64e-apple-darwin -run-pass=machine-outliner \
# RUN: -verify-machineinstrs %s -o - | FileCheck %s

# Ensure that in arm64e, we don't save LR to the stack at an outlined call-site.
# FIXME: It should be possible to do this. However, it seems kind of sketchy,
# and so for the sake of correctness, the behaviour is disabled.

--- |
  define void @foo() #0 {
    ret void
  }

  attributes #0 = { minsize noinline noredzone "no-frame-pointer-elim"="true" }
...
---

# In arm64e, right now, we never outline anything that would require a save
# to the stack at the call-site.
# CHECK-LABEL: name:            foo
# CHECK-NOT: BL
# CHECK-NOT: early-clobber $sp, $lr = LDRXpost $sp, 16
# CHECK-NOT: early-clobber $sp = STRXpre $lr, $sp, -16
name:            foo
tracksRegLiveness: true
body:             |
  bb.0:
    liveins: $lr, $x0, $x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11, $x12, $x13, $x14, $x15, $x19, $x20, $x21, $x22, $x23, $x20, $x21, $x22, $x23, $x24, $x25, $x26, $x27, $x28
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w12 = ORRWri $wzr, 2
  bb.1:
    liveins: $lr, $x0, $x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11, $x12, $x13, $x14, $x15, $x19, $x20, $x21, $x22, $x23, $x20, $x21, $x22, $x23, $x24, $x25, $x26, $x27, $x28
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w12 = ORRWri $wzr, 2
  bb.2:
    liveins: $lr, $x0, $x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11, $x12, $x13, $x14, $x15, $x19, $x20, $x21, $x22, $x23, $x20, $x21, $x22, $x23, $x24, $x25, $x26, $x27, $x28
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w10 = ORRWri $wzr, 1
    $w12 = ORRWri $wzr, 2
  bb.3:
    liveins: $lr, $x0, $x1, $x2, $x3, $x4, $x5, $x6, $x7, $x8, $x9, $x10, $x11, $x12, $x13, $x14, $x15, $x19, $x20, $x21, $x22, $x23, $x20, $x21, $x22, $x23, $x24, $x25, $x26, $x27, $x28
    RET undef $lr
